import{_ as e,c as a,a8 as s,o as n}from"./chunks/framework.CnRC9NRC.js";const h=JSON.parse('{"title":"文件格式","description":"","frontmatter":{},"headers":[],"relativePath":"zh/file_formats/index.md","filePath":"zh/file_formats/index.md"}'),i={name:"zh/file_formats/index.md"};function l(o,t,p,r,d,c){return n(),a("div",null,t[0]||(t[0]=[s(`<h1 id="文件格式" tabindex="-1">文件格式 <a class="header-anchor" href="#文件格式" aria-label="Permalink to &quot;文件格式&quot;">​</a></h1><p>MAVLink系统往往需要能够储存、交换或恢复MAVLink信息，包括：任务计划、地理围栏定义、集会点、参数、日志等。 通常, 信息是在一个系统上定义, 在另一个系统上使用 (例如, 自动驾驶仪的日志通过分析工具进行分析, 任务是使用 GCS 规划工具创建的, 并从配套计算机运行)。 通常, 信息是在一个系统上定义, 在另一个系统上使用 (例如, 自动驾驶仪的日志通过分析工具进行分析, 任务是使用 GCS 规划工具创建的, 并从配套计算机运行)。</p><p>There is a <em>defacto</em> standard used in many GCS systems and developer APIs for storing <em>mission</em> information: <a href="#mission_plain_text_file">plain-text file format</a>.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>At time of writing there are no MAVLink standards (defacto or otherwise) for: geofence, rally points, parameters etc. There is a discussion about standardising file formats in <a href="https://github.com/mavlink/mavlink/issues/989" target="_blank" rel="noreferrer">Issue #989</a>.</p></div><h2 id="mission_plain_text_file" tabindex="-1">Mission Plain-Text File Format <a class="header-anchor" href="#mission_plain_text_file" aria-label="Permalink to &quot;Mission Plain-Text File Format {#mission_plain_text_file}&quot;">​</a></h2><p><em>QGroundControl</em> and many other GCS support an older plain-text format for missions. 这不是MAVLink的正式组成部分，也不允许提供集会点或地理围栏信息。</p><p>格式如下。 第一行包含文件格式和版本信息，后面行为任务项目。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>QGC WPL &lt;VERSION&gt;</span></span>
<span class="line"><span>&lt;INDEX&gt; &lt;CURRENT WP&gt; &lt;COORD FRAME&gt; &lt;COMMAND&gt; &lt;PARAM1&gt; &lt;PARAM2&gt; &lt;PARAM3&gt; &lt;PARAM4&gt; &lt;PARAM5/X/LATITUDE&gt; &lt;PARAM6/Y/LONGITUDE&gt; &lt;PARAM7/Z/ALTITUDE&gt; &lt;AUTOCONTINUE&gt;</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>The spaces between the numbers/fields above are <code>&lt;tab&gt;</code> (i.e. <code>\\t</code> in most programming languages).</p></div><p>例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>QGC WPL 110</span></span>
<span class="line"><span>0	1	0	16	0.149999999999999994	0	0	0	8.54800000000000004	47.3759999999999977	550	1</span></span>
<span class="line"><span>1	0	0	16	0.149999999999999994	0	0	0	8.54800000000000004	47.3759999999999977	550	1</span></span>
<span class="line"><span>2	0	0	16	0.149999999999999994	0	0	0	8.54800000000000004	47.3759999999999977	550	1</span></span></code></pre></div>`,11)]))}const g=e(i,[["render",l]]);export{h as __pageData,g as default};
