import{_ as d,c as e,a8 as a,o as r}from"./chunks/framework.CnRC9NRC.js";const h=JSON.parse('{"title":"Dialect: test","description":"","frontmatter":{},"headers":[],"relativePath":"en/messages/test.md","filePath":"en/messages/test.md"}'),i={name:"en/messages/test.md"};function o(n,t,s,l,c,_){return r(),e("div",null,t[0]||(t[0]=[a('<h1 id="dialect-test" tabindex="-1">Dialect: test <a class="header-anchor" href="#dialect-test" aria-label="Permalink to &quot;Dialect: test&quot;">​</a></h1><p>The test dialect is used for testing XML file parsing.</p><p>This topic is a human-readable form of the XML definition file: <a href="https://github.com/mavlink/mavlink/blob/master/message_definitions/v1.0/test.xml" target="_blank" rel="noreferrer">test.xml</a>.</p><p><span id="mav2_extension_field"></span></p><blockquote><p><strong>Note</strong></p><ul><li>MAVLink 2 <a href="./../guide/define_xml_element.html#message_extensions">extension fields</a> are displayed in blue.</li><li>Entities from dialects are displayed only as headings (with link to original)</li></ul></blockquote><p><strong>Protocol version:</strong> 3</p><h2 id="mavlink-include-files" tabindex="-1">MAVLink Include Files <a class="header-anchor" href="#mavlink-include-files" aria-label="Permalink to &quot;MAVLink Include Files&quot;">​</a></h2><p>None</p><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Defined</th><th>Included</th></tr></thead><tbody><tr><td><a href="#messages">Messages</a></td><td>1</td><td>0</td></tr><tr><td>Enums</td><td>0</td><td>0</td></tr><tr><td>Commands</td><td>0</td><td>0</td></tr></tbody></table><p>The following sections list all entities in the dialect (both included and defined in this file).</p><h2 id="messages" tabindex="-1">Messages <a class="header-anchor" href="#messages" aria-label="Permalink to &quot;Messages&quot;">​</a></h2><h3 id="TEST_TYPES" tabindex="-1">TEST_TYPES (17000) <a class="header-anchor" href="#TEST_TYPES" aria-label="Permalink to &quot;TEST_TYPES (17000) {#TEST_TYPES}&quot;">​</a></h3><p>Test all field types</p><table tabindex="0"><thead><tr><th>Field Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>c</td><td><code>char</code></td><td>char</td></tr><tr><td>s</td><td><code>char[10]</code></td><td>string</td></tr><tr><td>u8</td><td><code>uint8_t</code></td><td>uint8_t</td></tr><tr><td>u16</td><td><code>uint16_t</code></td><td>uint16_t</td></tr><tr><td>u32</td><td><code>uint32_t</code></td><td>uint32_t</td></tr><tr><td>u64</td><td><code>uint64_t</code></td><td>uint64_t</td></tr><tr><td>s8</td><td><code>int8_t</code></td><td>int8_t</td></tr><tr><td>s16</td><td><code>int16_t</code></td><td>int16_t</td></tr><tr><td>s32</td><td><code>int32_t</code></td><td>int32_t</td></tr><tr><td>s64</td><td><code>int64_t</code></td><td>int64_t</td></tr><tr><td>f</td><td><code>float</code></td><td>float</td></tr><tr><td>d</td><td><code>double</code></td><td>double</td></tr><tr><td>u8_array</td><td><code>uint8_t[3]</code></td><td>uint8_t_array</td></tr><tr><td>u16_array</td><td><code>uint16_t[3]</code></td><td>uint16_t_array</td></tr><tr><td>u32_array</td><td><code>uint32_t[3]</code></td><td>uint32_t_array</td></tr><tr><td>u64_array</td><td><code>uint64_t[3]</code></td><td>uint64_t_array</td></tr><tr><td>s8_array</td><td><code>int8_t[3]</code></td><td>int8_t_array</td></tr><tr><td>s16_array</td><td><code>int16_t[3]</code></td><td>int16_t_array</td></tr><tr><td>s32_array</td><td><code>int32_t[3]</code></td><td>int32_t_array</td></tr><tr><td>s64_array</td><td><code>int64_t[3]</code></td><td>int64_t_array</td></tr><tr><td>f_array</td><td><code>float[3]</code></td><td>float_array</td></tr><tr><td>d_array</td><td><code>double[3]</code></td><td>double_array</td></tr></tbody></table>',15)]))}const m=d(i,[["render",o]]);export{h as __pageData,m as default};
