import{_ as e,a,b as r}from"./chunks/logo_linux_foundation.DuEP9s2o.js";import{_ as l,c as n,a8 as i,o as s}from"./chunks/framework.CnRC9NRC.js";const u=JSON.parse('{"title":"MAVLink 开发人员指南","description":"","frontmatter":{},"headers":[],"relativePath":"zh/index.md","filePath":"zh/index.md"}'),d={name:"zh/index.md"};function g(o,t,h,f,m,c){return s(),n("div",null,t[0]||(t[0]=[i('<p><span style="float:right;padding:10px;margin-right:20px;"><a href="https://github.com/mavlink/mavlink"><img src="'+e+'" title="MAVLink Logo" width="250px"></a></span></p><h1 id="mavlink-开发人员指南" tabindex="-1">MAVLink 开发人员指南 <a class="header-anchor" href="#mavlink-开发人员指南" aria-label="Permalink to &quot;MAVLink 开发人员指南&quot;">​</a></h1><p>MAVLink是一种非常轻量级的消息传输协议, 用于地面控制终端（地面站）与无人机之间 (以及机载无人机组件之间) 进行通信。</p><p>Mavlink 遵循现代混合发布-订阅和点对点设计模式: 数据流作为 <strong>topics</strong> 发送/发布的, 而配置子协议 (如 <a href="./services/mission.html">路径点协议 </a>或 <a href="./services/parameter.html">参数协议</a>）是基于重传机制的点对点模式。</p><p>Messages are <a href="./messages/">defined within XML files</a>. 每个xml文件对应一个特定的MAVLink系统，并为该系统定义了专属的消息集（亦被称之为“语支dialect”）。 <em>大部分</em> 地面站和自动驾驶仪所采用的“通用消息集”定义于 <a href="./messages/common.html">common.xml</a>中 (大多数“语支”均是基于“通用消息集“<em>构建</em> 的：即，大多数“语支”所对应的xml文件里，均包含了common.xml) 。</p><p><a href="./getting_started/generate_libraries.html">Code generators</a> create software libraries for <a href="#supported_languages">specific programming languages</a> from these XML message definitions, which can then be used by drones, ground control stations, and other MAVLink systems to communicate. The generated libraries are typically MIT-licensed, and can therefore be <em>used</em> without limits in any closed-source application without publishing the source code of the closed-source application.</p><div class="note custom-block github-alert"><p class="custom-block-title">The C reference implementation is a header-only library that is highly optimized for resource-constrained systems with limited RAM and flash memory. 这种库，已经过现场验证, 并部署在许多产品中, 充当不同厂家组件之间的交互性接口。</p><p></p></div><p>MAVLink于2009年初由Lorenz Meier首次发布, 目前为止，已拥有<a href="https://github.com/mavlink/mavlink/graphs/contributors" target="_blank" rel="noreferrer">数量可观的贡献者</a>。</p><h2 id="主要特性" tabindex="-1">主要特性 <a class="header-anchor" href="#主要特性" aria-label="Permalink to &quot;主要特性&quot;">​</a></h2><ul><li>高效性。 MAVLink 1每个数据包只有8个字节的开销, 包括起始标志和数据包丢弃检测。 MAVLink 2只有14个字节的开销 (但它是一个更安全且可扩展的协议)。 因为MAVLink不需要任何额外的帧, 所以它非常适合通信带宽非常有限的应用程序。</li><li>可靠性。 自2009年以来, MAVLink一直被用于多种载具、地面站 (和其他节点) 之间的通信，而这些通信信道中，不乏各种挑战性(如高延迟、噪声) 。 同时，Mavlink也具备检测数据包丢失、损坏和数据包身份验证的功能。</li><li><a href="#supported_languages">Many different programming languages</a> can be used, running on numerous microcontrollers/operating systems (including ARM7, ATMega, dsPic, STM32 and Windows, Linux, MacOS, Android and iOS).</li><li>单个网络上最多可容纳255个并行系统 (载具、地面站等)。</li><li>支持offboard和 onboard通信 (例如，地面站和无人机之间的通信（offboard）, 以及无人机自动驾驶仪与启用MAVLink的无人机摄像头之间的通信（onboard）)。</li></ul><h2 id="supported_languages" tabindex="-1">Language/Generator List <a class="header-anchor" href="#supported_languages" aria-label="Permalink to &quot;Language/Generator List {#supported_languages}&quot;">​</a></h2><p>The sections below lists MAVLink generators and their associated programming languages.</p><h3 id="mavlink-project-generators-languages" tabindex="-1">MAVLink Project Generators/Languages <a class="header-anchor" href="#mavlink-project-generators-languages" aria-label="Permalink to &quot;MAVLink Project Generators/Languages&quot;">​</a></h3><p>The MAVLink organisation provides (and supports) the <a href="./getting_started/generate_libraries.html#mavgen">mavgen</a>, <a href="./getting_started/generate_libraries.html#mavgenerate">mavgenerate</a> and <a href="https://github.com/mavlink/rust-mavlink" target="_blank" rel="noreferrer">rust-mavlink</a> tools.</p><table tabindex="0"><thead><tr><th style="text-align:left;">语言</th><th style="text-align:left;">生成器</th><th style="text-align:center;">MAVLink v1</th><th style="text-align:center;"><a href="./guide/mavlink_2.html">MAVLink 2</a></th><th style="text-align:left;"><a href="./guide/message_signing.html">Signing</a></th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">C</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">MAVLink project reference implementation. 可基于两个协议版本发布相应的<a href="#prebuilt_libraries">生成库</a>。</td></tr><tr><td style="text-align:left;">C++11</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Python (2.7+, 3.3+)</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">Python bindings. Library also available on PyPi: <a href="https://pypi.org/project/pymavlink/" target="_blank" rel="noreferrer">pymavlink</a>.</td></tr><tr><td style="text-align:left;">C#</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Objective C</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;"></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Java</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;"></td><td style="text-align:left;">Dronefleet offers a more idiomatic generated library</td></tr><tr><td style="text-align:left;">JavaScript (Stable)</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✗</td><td style="text-align:left;">Old mavgen JavaScript binding (has known bugs and no test suite).</td></tr><tr><td style="text-align:left;">JavaScript (NextGen)</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">New mavgen JavaScript library. Full test suite, resulting library produces binary compatible output compared to C bindings. Slightly incompatible with previous version, but not hard to migrate.</td></tr><tr><td style="text-align:left;">TypeScript/JavaScript</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✗</td><td style="text-align:left;">TypeScript classes which can be used with <a href="https://github.com/ifrunistuttgart/node-mavlink" target="_blank" rel="noreferrer">node-mavlink</a>.</td></tr><tr><td style="text-align:left;">Lua</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✗</td><td style="text-align:left;">Lua library. Does not support zero trimming of MAVLink 2 messages.</td></tr><tr><td style="text-align:left;">WLua (Wireshark Lua bindings)</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">NA</td><td style="text-align:left;">Allow MAVLink-aware packet inspection in Wireshark. Generated lua scripts should be copied to the Wireshark plugin directory (e.g. <strong>wireshark/plugins/mavlink.lua</strong>).</td></tr><tr><td style="text-align:left;">Swift</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;"></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Rust</td><td style="text-align:left;"><a href="https://github.com/mavlink/rust-mavlink" target="_blank" rel="noreferrer">rust-mavlink</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;"></td><td style="text-align:left;">Rust MAVLink generated code. Has <a href="https://github.com/mavlink/rust-mavlink/tree/master/tests" target="_blank" rel="noreferrer">tests</a> and <a href="https://docs.rs/mavlink/latest/mavlink/" target="_blank" rel="noreferrer">docs</a>.</td></tr><tr><td style="text-align:left;">Ada</td><td style="text-align:left;"><a href="./getting_started/generate_libraries.html#mavgen">mavgen</a></td><td style="text-align:center;">✓</td><td style="text-align:center;"></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr></tbody></table><h3 id="external-generators-languages" tabindex="-1">External Generators/Languages <a class="header-anchor" href="#external-generators-languages" aria-label="Permalink to &quot;External Generators/Languages&quot;">​</a></h3><p>The following generators are delivered by independent projects (and supported by those projects).</p><table tabindex="0"><thead><tr><th style="text-align:left;">语言</th><th style="text-align:left;">生成器</th><th style="text-align:center;">MAVLink v1</th><th style="text-align:center;"><a href="./guide/mavlink_2.html">MAVLink 2</a></th><th style="text-align:left;"><a href="./guide/message_signing.html">Signing</a></th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">C</td><td style="text-align:left;"><a href="https://github.com/olliw42/fastmavlink" target="_blank" rel="noreferrer">fastMavlink</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✗</td><td style="text-align:left;">Highly efficient C library with python code generators. Has <a href="https://github.com/olliw42/fastmavlink" target="_blank" rel="noreferrer">docs</a>, <a href="https://github.com/olliw42/fastmavlink/tree/master/examples" target="_blank" rel="noreferrer">examples</a>, <a href="https://github.com/olliw42/fastmavlink/tree/master/tests" target="_blank" rel="noreferrer">test</a>, support for <a href="https://github.com/olliw42/fastmavlink#router" target="_blank" rel="noreferrer">routing</a> and <a href="https://github.com/olliw42/fastmavlink#pymavlink-mavgen-mimicry" target="_blank" rel="noreferrer">mavgen mimicry</a>.</td></tr><tr><td style="text-align:left;">Clojure</td><td style="text-align:left;"><a href="https://github.com/WickedShell/clj-mavlink" target="_blank" rel="noreferrer">clj-mavlink</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">Clojure MAVLink Bindings.</td></tr><tr><td style="text-align:left;">Dart</td><td style="text-align:left;"><a href="https://github.com/nus/dart_mavlink" target="_blank" rel="noreferrer">dart_mavlink</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✗</td><td style="text-align:left;">MAVLink library for Dart.</td></tr><tr><td style="text-align:left;">Go</td><td style="text-align:left;"><a href="https://github.com/gswly/gomavlib" target="_blank" rel="noreferrer">gomavlib</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">Go library with support for MAVLink 1, 2 and signing, test suite, and <a href="https://pkg.go.dev/github.com/aler9/gomavlib" target="_blank" rel="noreferrer">documentation</a></td></tr><tr><td style="text-align:left;">Go</td><td style="text-align:left;"><a href="https://github.com/mgr9525/go-mavlink1" target="_blank" rel="noreferrer">go-mavlink1</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✗</td><td style="text-align:left;">✗</td><td style="text-align:left;">Golang MAVLink v1</td></tr><tr><td style="text-align:left;">Haskell</td><td style="text-align:left;"><a href="https://github.com/SweeWarman/HaskMavlink" target="_blank" rel="noreferrer">HaskMavlink</a></td><td style="text-align:center;">✗</td><td style="text-align:center;">✓</td><td style="text-align:left;">✗</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Java</td><td style="text-align:left;"><a href="https://github.com/dronefleet/mavlink" target="_blank" rel="noreferrer">dronefleet/mavlink</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;"><em>Idiomatic</em> Java SDK/API for MAVLink. Provides a gradle plugin for the code generator.</td></tr><tr><td style="text-align:left;">TypeScript/JavaScript/npm</td><td style="text-align:left;"><a href="https://github.com/padcom/node-mavlink#readme" target="_blank" rel="noreferrer">node-mavlink</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">TypeScript code generator for data classes with tools to receive and send messages. <a href="https://github.com/padcom/node-mavlink#getting-started" target="_blank" rel="noreferrer">Getting started</a> guide and inline JSDoc, along with some <a href="https://github.com/padcom/node-mavlink/tree/master/examples" target="_blank" rel="noreferrer">examples</a>.</td></tr><tr><td style="text-align:left;">Kotlin</td><td style="text-align:left;"><a href="https://github.com/divyanshupundir/mavlink-kotlin" target="_blank" rel="noreferrer">mavlink-kotlin</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">Uses codegen instead of reflection for performance with Coroutines, RxJava2 and RxJava3 support. Provides a code generator Gradle plugin.</td></tr></tbody></table><h2 id="prebuilt_libraries" tabindex="-1">预建的基于C语言的MAVLink库 <a class="header-anchor" href="#prebuilt_libraries" aria-label="Permalink to &quot;预建的基于C语言的MAVLink库 {#prebuilt_libraries}&quot;">​</a></h2><p><em>C</em> MAVLink Source Files (only) are auto-generated for the latest versions of all message <a href="./messages/">specifications/dialects</a> (for both MAVLink 1 and 2):</p><ul><li><a href="https://github.com/mavlink/c_library_v2" target="_blank" rel="noreferrer">c_library_v2</a> (MAVLink 2)</li><li><a href="https://github.com/mavlink/c_library_v1" target="_blank" rel="noreferrer">c_library_v1</a> (MAVLink 1)</li></ul><p><a href="./mavgen_c/">Using C Libraries</a> explains how to use these libraries.</p><h2 id="support" tabindex="-1">支持 <a class="header-anchor" href="#support" aria-label="Permalink to &quot;支持 {#support}&quot;">​</a></h2><p>The <a href="./about/support.html">Support</a> topic contains information about the <a href="https://groups.google.com/forum/#!forum/mavlink" target="_blank" rel="noreferrer">mailing list</a>, reporting bugs/issues, and joining the <a href="./about/support.html#dev_call">dev call</a>.</p><h2 id="参与贡献" tabindex="-1">参与贡献 <a class="header-anchor" href="#参与贡献" aria-label="Permalink to &quot;参与贡献&quot;">​</a></h2><p>The <a href="./contributing/contributing.html">Contributing Guide</a> explains the contribution model and the main areas where you can help.</p><h2 id="许可证" tabindex="-1">许可证 <a class="header-anchor" href="#许可证" aria-label="Permalink to &quot;许可证&quot;">​</a></h2><p>The message definition XML files and the generated <a href="#prebuilt_libraries">C-language version of MAVLink</a> (a header-only library) are made available under the MIT-licence. MAVLink can therefore be <em>used</em> in any closed-source application without publishing the source code of the closed-source application. See the <a href="https://github.com/mavlink/mavlink/blob/master/COPYING" target="_blank" rel="noreferrer">COPYING</a> file for more information.</p><p>The <a href="https://github.com/mavlink/mavlink/" target="_blank" rel="noreferrer">MAVLink generator toolchain</a> is licensed under the terms of the Lesser General Public License (version 3) of the Free Software Foundation (LGPLv3).</p><p>This documentation is licensed under <em>CC BY 4.0</em> (<a href="https://creativecommons.org/licenses/by/4.0/" target="_blank" rel="noreferrer">Human readable overview</a> | <a href="https://github.com/mavlink/mavlink-devguide/blob/master/LICENSE" target="_blank" rel="noreferrer">LICENSE</a>).</p><h2 id="管理" tabindex="-1">管理 <a class="header-anchor" href="#管理" aria-label="Permalink to &quot;管理&quot;">​</a></h2><p>The MAVLink protocol is hosted under the governance of the <a href="https://www.dronecode.org/" target="_blank" rel="noreferrer">Dronecode Project</a>.</p><p><a href="https://www.dronecode.org/" style="padding:20px;"><img src="'+a+'" alt="Dronecode Logo" width="110px"></a><a href="https://www.linuxfoundation.org/projects" style="padding:20px;"><img src="'+r+'" alt="Linux Foundation Logo" width="80px"></a></p><div style="padding:10px;"> </div>',34)]))}const x=l(d,[["render",g]]);export{u as __pageData,x as default};
