import{_ as a,c as n,a8 as t,o}from"./chunks/framework.CnRC9NRC.js";const p=JSON.parse('{"title":"Redundancy and Message/Command De-duplication","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/redundancy_deduplication.md","filePath":"en/guide/redundancy_deduplication.md"}'),i={name:"en/guide/redundancy_deduplication.md"};function s(d,e,c,r,m,l){return o(),n("div",null,e[0]||(e[0]=[t('<h1 id="redundancy-and-message-command-de-duplication" tabindex="-1">Redundancy and Message/Command De-duplication <a class="header-anchor" href="#redundancy-and-message-command-de-duplication" aria-label="Permalink to &quot;Redundancy and Message/Command De-duplication&quot;">â€‹</a></h1><p>A MAVLink network may include redundant links. For example, a vehicle might have two telemetry radios for connecting to a ground station, or a telemetry radio for near-communication and a satellite connection for long range communication. In these cases, the same message or command may reach the receiver by several paths. Further, even on a single channel, it is possible that the same command is sent (and received) multiple times, due to loss of the original acknowledgement.</p><p>MAVLink has no in-built mechanism for deconflicting messages received from multiple channels. The packet sequence number cannot be used, for example, because each channel has its own sequence counter.</p><p>To mitigate this problem, commands are designed (where possible) to be idempotent, such that it <em>doesn&#39;t matter</em> if the same command is received when the vehicle is acting/has already acted on the same command. For example, a command to ARM or TAKEOFF when the vehicle is already armed or flying should immediately be acknowledged with a <a href="./../messages/common.html#COMMAND_ACK">COMMAND_ACK.result</a> of <a href="./../messages/common.html#MAV_RESULT_ACCEPTED">MAV_RESULT_ACCEPTED</a>.</p><p>Another approach to mitigate this kind of problem is to only accept data on a primary channel, and fall back to the secondary channel if the first channel fails.</p><p>When using multiple channels you may still run into problems, in particular when working with very high latency links. The appropriate actions in these cases need to be considered on a case-by-case basis.</p>',6)]))}const u=a(i,[["render",s]]);export{p as __pageData,u as default};
